name: Build Project CI
on:
  workflow_dispatch:
  pull_request:
    branches: 
    - develop
    - QA
    - main
jobs:
  Dependencies:    
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Angular CLI
        run: npm i -g @angular/cli
      - name: Add lint schematics
        run: ng add @angular-eslint/schematics --skip-confirmation
      - name: Run ESLint
        run: npm run lint
        
  tests:
    name: Run Tests
    needs: Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3        
      - name: Use Node.js 18.x to run Test
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'          
      - name: Install Dependencies
        run: npm ci        
      - name: Run Tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
          
  Sonar:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact generated
      uses: actions/download-artifact@v4
      with:
        name:  ${{ vars.github.repository }}
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2.2.0
      with: 
        args: >
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION}}
          -Dsonar.projectKey=angular-realworld-example-app
          -Dsonar.verbose=true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  Security:
    needs: Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

  BuildandPush:
    needs: Security
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      pages: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: alejog38/githubactions
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}      
      
